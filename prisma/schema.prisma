// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DifficultyEnum {
  BEGGINER
  INTERMEDIATE
  ADVANCED
}

enum CategoryEnum {
  MARKETING
  TECH
}

enum LessonType {
  VIDEO
  TEXT
  QUIZ
}

model Course {
  id                String    @id @default(uuid())
  title             String
  description       String
  slug              String
  published         Boolean?  @default(false)
  price             Float
  image_url         String?
  video_trailer_url String?
  is_mini_course    Boolean?  @default(false)
  difficulty        String?
  category          String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @default(now())
  modules           Module[]
}

model Module {
  id       String   @id @default(uuid())
  number   Int
  name     String
  lessons  Lesson[]
  Course   Course?  @relation(fields: [courseId], references: [id])
  courseId String?
}

model Lesson {
  id        String  @id @default(uuid())
  number    Int
  name      String
  video_url String?
  content   String?
  type      String
  isFree    Boolean @default(false)
  Module    Module? @relation(fields: [moduleId], references: [id])
  moduleId  String?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
}
